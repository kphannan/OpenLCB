<!-- Ant build.xml file for OpenLCB development -->
<!-- Bob Jacobsen, Copyright 2009 -->
<!-- Revision $Revision: 370 $ -->

<project name="OpenLCB" default="run" basedir=".">
<!-- basedir="." means all paths are relative to the "java" subdir. -->

  <description>
  Provides build services for OpenLCB development
  </description>

  <!-- options you might want to change during development,   -->
  <!-- but please change them back before commiting this file -->
  
    <!-- should compiler warn of use of deprecated APIs? (yes/no) -->
    <property name="deprecation" value="no" />
  
    <!-- SDK version -->
    <property name="sdk_version" value="1.5" />
  
    <!-- source code version -->
    <property name="source_version" value="1.5" />
  
    <!-- JRE version -->
    <property name="jre_version" value="1.5" />
    
  <!-- set global properties for this build -->
  <property name="source" value="src"/>
  <property name="test" value="test"/>
  <property name="target" value="classes"/>
  <property name="jartarget" value="."/>
  <property name="doctarget" value="doc"/>
  
  <path id="project.class.path">
    <pathelement location="." />
    <pathelement location="lib/junit.jar" />
    <pathelement location="lib/xercesImpl.jar" /> <!-- only needed for tests compile and run -->
    <pathelement location="lib/jdom.jar" />
    <pathelement location="lib/jlfgr-1_0.jar" />
    <pathelement location="lib/annotations.jar" /> <!-- only needed for compile -->
    <pathelement location="lib/jsr305.jar" /> <!-- only needed for compile -->
    <pathelement location="/System/Library/Java" /> <!-- MacOS X -->
    <pathelement location="${target}/" />  <!-- last to check for name collisions -->
  </path>

  <target name="init" description="create needed directories">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${target}"/>
    <mkdir dir="${target}/resources" />
  </target>

  <target name="clean" description="remove compilation results to force rebuild">
    <mkdir dir="${target}"/>
    <delete includeEmptyDirs="true">
      <fileset dir="${target}"/>
    </delete>
  </target>

  <target name="copyfiles" depends="init" description="copy resource files">
    <copy todir="${target}">
      <fileset dir="src/" includes="**/*.properties"  /> 
    </copy>
  </target>

  <target name="compile" depends="init, copyfiles" description="compile source, omitting tests">
    <!-- Compile the java code from ${source} into ${target} -->
    <javac srcdir="${source}" 
           destdir="${target}" 
           source="${source_version}" 
           target="${jre_version}" 
           fork="true"
           includeantruntime="false"
           memoryinitialsize="256m"
           memorymaximumsize="256m"
           deprecation="${deprecation}"
           debug="yes" >
       <compilerarg value="-Xlint:{fallthrough, path, finally, -unchecked, -serial, deprecated}"/>
       <!-- <compilerarg value="-Xlint:unchecked" /> -->
       <classpath refid="project.class.path"    />
    </javac>
  </target>

  <target name="tests" depends="compile" description="compile test classes">
    <!-- Compile the test java code from ${source} into ${target} -->
    <copy todir="${target}">
        <fileset dir="test/" includes="**/*.properties"  /> 
    </copy>
    <javac srcdir="${test}" 
           destdir="${target}"
           source="${source_version}" 
           target="${jre_version}" 
           fork="true"
           includeantruntime="false"
           memoryinitialsize="256m"
           memorymaximumsize="256m"
           deprecation="${deprecation}"
           debug="yes" >
       <classpath refid="project.class.path"    />
    </javac>
  </target>

  <target name="run" depends="compile, tests" description="build and run test suite">
    <java classname="AllTest"
	  fork="yes" >
       <classpath refid="project.class.path"    />
       <sysproperty key="java.security.policy" value="lib/security.policy"/> 
       <sysproperty key="java.library.path" path=".:lib/"/>       
    </java>
  </target>

  <target name="bg" depends="compile, tests" description="build and run Blue/Gold test">
    <java classname="scenarios.BlueGoldCheck"
          dir=".." 
	  fork="yes" >
       <classpath refid="project.class.path"    />
       <sysproperty key="java.security.policy" value="lib/security.policy"/> 
       <sysproperty key="java.library.path" path=".:lib/"/>       
    </java>
  </target>


  <target name="javadoc" depends="init" description="create JavaDoc for prototype code, omitting tests">
    <javadoc packagenames="org.*"
           maxmemory="512m"
           sourcepath="${source}"
           overview="src/overview.html"
           defaultexcludes="yes"
           destdir="${doctarget}"
           additionalparam="-breakiterator"
           author="true"
           version="false"
           use="true"
           windowtitle="OpenLCB">
      <group title="Core" packages="org.openlcb"/>
	  
      <classpath refid="project.class.path"    />
      <doctitle><![CDATA[<h1>OpenLCB API</h1>]]></doctitle>
      <link href="http://java.sun.com/j2se/1.4.1/docs/api/" />
    </javadoc>
  </target>

  <target name="javadocall" depends="init" description="create JavaDoc for all code including tests">
    <javadoc packagenames="org.*, tools.*, simulations.*, scenarios.*"
           maxmemory="512m"
           sourcepath="${source}:${test}"
           overview="src/overview.html"
           defaultexcludes="yes"
           destdir="${doctarget}"
           additionalparam="-breakiterator"
           author="true"
           version="false"
           use="true"
           windowtitle="OpenLCB">
      <group title="Core" packages="org.openlcb"/>
	  
      <classpath refid="project.class.path"    />
      <doctitle><![CDATA[<h1>OpenLCB API</h1>]]></doctitle>
      <link href="http://java.sun.com/j2se/1.4.1/docs/api/" />
    </javadoc>
  </target>

  <target name="jars" description="create working jar files with current contents">
    <antcall target="clean" />
    <antcall target="compile" />
    <jar jarfile="${jartarget}/openlcb.jar" 
         basedir="${target}"
         manifest="manifest" 
         compress="true" />   <!-- compress="true" is default -->
    <antcall target="tests" />
    <jar jarfile="${jartarget}/openlcb-demo.jar" 
         basedir="${target}"
         manifest="manifest" 
         compress="true" />   <!-- compress="true" is default -->
  </target>

</project>


