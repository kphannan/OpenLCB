unit EthCommon;

{$I Options.inc}

const
  RXSTART              : word = $1000;
  RXEND                : word = $5FFF;
  TXSTART              : word = $0000;
  GPSTART              : word = $0800;

  ETH_IP                     : word = $0800;
  ETH_IP_TCP                 : byte = $06;
  ETH_IP_UDP                 : byte = $11;
  ETH_IP_ICMP                : byte = $01;
  ETH_IP_ICMP_ECHO           : byte = $08;
  ETH_IP_ICMP_REPLY          : byte = $00;

  max_packet           : word = 1518;

  URG                  : byte = 5;
  ACK                  : byte = 4;
  PSH                  : byte = 3;
  RST                  : byte = 2;
  SYN                  : byte = 1;
  FIN                  : byte = 0;

  URG_S                : byte = $20;
  ACK_S                : byte = $10;
  PSH_S                : byte = $08;
  RST_S                : byte = $04;
  SYN_S                : byte = $02;
  FIN_S                : byte = $01;

  Months_Days          : array[13] of Byte = ( 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31); far;

  POLICY_REJECT               : byte = 1;
  POLICY_DROP                 : byte = 2;
  
  IPV4 = 4;
  
const
  IP_ADDRESS_LEN = 4;
  MAC_ADDRESS_LEN = 6;
type
  TIPAddress = array[IP_ADDRESS_LEN] of byte;
  TMACAddress = array[MAC_ADDRESS_LEN] of byte;


const
  PHYSICAL_LAYER_HEADER_OFFSET = 0;
  PHYSICAL_LAYER_HEADER_SIZE = 14;
type
  TPhysicalLayerHeader = record
    SourceMacAddress,
    DestMacAddress: DWord;
    Protocol: Word;
  end;

const
  IP_HEADER_OFFSET = 14;
  IP_HEADER_SIZE = 20;
type
  TIPHeader = record
    Version,
    IHL,
    DSCP,
    ECN:  Byte;
    TotalLength: Word;
    Identification: Word;
    Flags: Byte;
    FragmentOffset: Word;
    TimeToLive: Byte;
    Protocol: Byte;
    SourceIPAddress,
    DestIPAddress: TIPAddress;
  end;
  
const
  TCP_HEADER_OFFSET = IP_HEADER_OFFSET + 20;  
  TCP_HEADER_SIZE = 20;
  TCP_DATA_OFFSET = TCP_HEADER_OFFSET + TCP_HEADER_SIZE;
type
  TTCPHeader = record
    SourcePort,
    DestPort:  Word;
    SequenceNumber: DWord;
    AckNumber: DWord;
    DataOffset: Byte;
    Flags: Word;
    WindowSize: Word;
    UrgentPtr: Word;
  end;

  {$IFDEF ETHERNET_16_BIT_PROCESSOR}
  TRawHeader = record
    Offset0Hi,
    Offset0Lo,
    Offset1Hi,
    Offset1Lo,
    Offset2Hi,
    Offset2Lo,
    Offset3Hi,
    Offset3Lo,
    Offset4Hi,
    Offset4Lo,
    Offset5Hi,
    Offset5Lo: Word;
  end;
  {$ELSE}
    {$IFDEF ETHERNET_32_BIT_PROCESSOR}
    TRawHeader = record
      Offset0,
      Offset1,
      Offset2,
      Offset3,
      Offset4,
      Offset5: DWord;
    end;
    {$ELSE}
    TRawHeader = record
      Error: TError;    // Must define the number of Bits in the Options file
    end;
    {$ENDIF}
  {$ENDIF}
  
var
  TickCounter1,           // Used: ARP_Validate_IP, DHCP_Request, Dns_Resolve, Ping_Send,
  TickCounter10 : word;   // Used: Close_TCP_Connection, TCP_Send_Internal


implementation

end.