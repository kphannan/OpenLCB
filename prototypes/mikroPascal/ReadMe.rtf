{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww21280\viewh15180\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Hi!\
\
Welcome to the OpenLCB Prototype code for the MikroElectronica mikroPascal dsPIC30/33 and PIC24 compiler.  To start with this is NOT a free compiler for projects larger than 2k bytes but it is a _very_good_ compiler with excellent support.  I do have the mikroC compiler as well but I don't know C as well as I do Pascal so if anyone wants to help converter this library into the C version please let me know.\
\
This code is organized such that it contains many reusable core units for the interrupt driven CAN reception, DMA, OpenLCB protocols, and base state machines.  It allows for virtual Nodes (nodes that exist within the software and not on the CAN wire).  Currently it is feasible with a 60Mhz-80Mhz clock to support around 70 to 80 independent software nodes within a single micro controller.  The library currently does NOT support these nodes sending messages between themselves.  It should not be too difficult to accomplish but I have not had the need yet.  I currently used this feature for virtual Train nodes in a DCC command station and I don't see a reason to have Train nodes talk to each other yet (consisting may force this someday though).\
\
\
Any questions about the library or how I implemented features please drop me a line.  \
\
Jim Kueneman\
jimkueneman@yahoo.com}