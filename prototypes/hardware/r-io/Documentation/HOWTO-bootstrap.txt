Bob Jacobsen's note on starting from bare R-Io boards Feb 2012

Background:  
    Bare R-Io boards, no bootloader; 
    Mac OS X 10.7.2 host
    Arduino 1.0
    CrossPack-AVR-20100115
    USBtinyISP AVR programmer (https://www.adafruit.com/products/46)
    OpenLCB SVN at revision 1734
    
Solder on ICSP 2x3 header and a FTDI header

Connect a power brick.  Put the jumper near the side of the board to "pwr ext"
    
Pin 1 on ICSP is away from reset button, so flat cable goes toward RJ45 connectors
Chip is AT90CAN128, so use part c128 (can also use at90can128 directly)

Check programmer:
    avrdude -c usbtiny -p c128

Device signature = 0x1e9781 checks OK

Set fuses:
    avrdude -c usbtiny -p c128 -U lfuse:w:0xFF:m
    avrdude -c usbtiny -p c128 -U hfuse:w:0xD0:m
    avrdude -c usbtiny -p c128 -U efuse:w:0xFD:m

In openlcb/trunk/prototypes/hardware/r-io/Arduino/hardware/Io/bootloaders/Io/

    make io
(rebuilds AT90CAN_boot_io.hex file if needed)
    
Note: you need a recent avrdude version to write the bootloader. The avrdude 5.11
in Arduino 1.0 works fine.  The command to load is then:

    /Applications/Arduino.app/Contents/Resources/Java//hardware/tools/avr/bin/avrdude -C /Applications/Arduino.app/Contents/Resources/Java//hardware/tools/avr/etc/avrdude.conf -c usbtiny -p c128 -U flash:w:AT90CAN_boot_io.hex:i

You could also try e.g.  avrdude-5.11.tar.gz from http://download.savannah.gnu.org/releases/avrdude/ though I haven't

A successful bootloader install will double-pulse the "blue" LED.


Disconnect ICSP programmer
Connect an FTDI adapter. The "black" pin on the board is the ground connection,
the "green" one is RTS.

Now copy info to get the Io board type:

cd /Applications/Arduino.app/Contents/Resources/Java/hardware/

ln -s ~/Trains/MRRLCB/OpenLCB/svn/openlcb/trunk/prototypes/hardware/r-io/Arduino/hardware/Io Io

(your path may vary)

Restart or open the Arduino application. 
Select Railstars Io board type (should be top of list)
Select serial port.

open the sketch at trunk/prototypes/C/IoBlink
Compile


    At this point, I got stuck; Arduino could not download.
    I was able to locate the .hex file
    that Arduino had created and directly load OK via avrdude, but 
    this isn't a workable solution.

        
